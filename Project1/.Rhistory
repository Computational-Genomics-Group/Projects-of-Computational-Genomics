current_row <- row_Name[1]
qcalculation <- function(SNPdata){
row_Name <- rownames(SNPdata)
for(row in 1:nrow(SNPdata)) {
AA <- 0
Aa <- 0
aa <- 0
print(row)
for(col in 1:ncol(SNPdata)) {
i <- SNPdata[row,col]
if(i == 0){AA = AA + 1}
if(i == 1){Aa = Aa + 1}
if(i == 2){aa = aa + 1}
}
a_sum <- aa * 2 + Aa
sum_all <- (aa + Aa + AA) * 2
q <- a_sum / sum_all
current_row <- row_Name[1]
vec[row] <- c(,q)
}
#both same result
"a_sum = aa + (Aa / 2)
sum_all = aa + Aa + AA
q = a_sum / sum_all"
}
row_Name <- rownames(SNPdata)
for(row in 1:nrow(SNPdata)) {
AA <- 0
Aa <- 0
aa <- 0
print(row)
for(col in 1:ncol(SNPdata)) {
i <- SNPdata[row,col]
if(i == 0){AA = AA + 1}
if(i == 1){Aa = Aa + 1}
if(i == 2){aa = aa + 1}
}
a_sum <- aa * 2 + Aa
sum_all <- (aa + Aa + AA) * 2
q <- a_sum / sum_all
current_row <- row_Name[1]
vec[row] <- c(q)
}
row_current = row
row_Name <- rownames(SNPdata)
for(row in 1:nrow(SNPdata)) {
AA <- 0
Aa <- 0
aa <- 0
print(row)
for(col in 1:ncol(SNPdata)) {
i <- SNPdata[row,col]
if(i == 0){AA = AA + 1}
if(i == 1){Aa = Aa + 1}
if(i == 2){aa = aa + 1}
}
a_sum <- aa * 2 + Aa
sum_all <- (aa + Aa + AA) * 2
q <- a_sum / sum_all
print(row_current <- str(row))
current_row <- row_Name[str(row)]
vec[row] <- c(q)
}
current_row <- row_Name[integer(row)]
print(integer(row))
r <- integer(row)
current_row <- row_Name[r]
current_row <- row_Name[1]
r <- integer(r)
r <- integer(1)
row_Name <- rownames(SNPdata)
current_row = 0
for(row in 1:nrow(SNPdata)) {
AA <- 0
Aa <- 0
aa <- 0
current_row = current_row + 1
print(row)
for(col in 1:ncol(SNPdata)) {
i <- SNPdata[row,col]
if(i == 0){AA = AA + 1}
if(i == 1){Aa = Aa + 1}
if(i == 2){aa = aa + 1}
}
a_sum <- aa * 2 + Aa
sum_all <- (aa + Aa + AA) * 2
q <- a_sum / sum_all
current_row_name <- row_Name[current_row]
vec <- c(current_row_name , q)
}
vec <- append(vec, c(current_row_name , q))
#TASK1: Take as input a numeric data matrix that is supposed to have the same format of the genetic data
#provided in stem
#TASK2: Calculates the minor allele frequency q for each SNP
#TASK3: Return the minor allele frequency of each SNP as a vector of numeric values with names corresponding
#to the SNP IDs (chromosome_position, e.g. “chr1_11169676”) with the same order they had in the
#input matrix
#Suggestion:
#• It might be useful to use the function table() and to convert it in a data.frame().
#• Sometime you might have 0 subject with genotype aa… c
SNPdata <- read.table("C:\\Users\\Piermarco\\Documents\\GitHub\\BigDataBuona\\Projects-of-Computational-Genomics\\Project1\\SNPdata.txt",
header = TRUE, sep = "")
#TASK1: Take as input a numeric data matrix that is supposed to have the same format of the genetic data
#provided in stem
#TASK2: Calculates the minor allele frequency q for each SNP
#TASK3: Return the minor allele frequency of each SNP as a vector of numeric values with names corresponding
#to the SNP IDs (chromosome_position, e.g. “chr1_11169676”) with the same order they had in the
#input matrix
#Suggestion:
#• It might be useful to use the function table() and to convert it in a data.frame().
#• Sometime you might have 0 subject with genotype aa… c
SNPdata <- read.table("C:\\Users\\Piermarco\\Documents\\GitHub\\BigDataBuona\\Projects-of-Computational-Genomics\\Project1\\SNPdata.txt",
header = TRUE, sep = "")
qcalculation <- function(SNPdata){
row_Name <- rownames(SNPdata)
#using of current row problem with the type 1L = 1 they are the sane thing but the in row_Name does not work
current_row = 0
for(row in 1:nrow(SNPdata)) {
AA <- 0
Aa <- 0
aa <- 0
current_row = current_row + 1
print(row)
for(col in 1:ncol(SNPdata)) {
i <- SNPdata[row,col]
if(i == 0){AA = AA + 1}
if(i == 1){Aa = Aa + 1}
if(i == 2){aa = aa + 1}
}
a_sum <- aa * 2 + Aa
sum_all <- (aa + Aa + AA) * 2
q <- a_sum / sum_all
current_row_name <- row_Name[current_row]
# !!! don't know if it is ok just append in sequential order the char and the value associated
vec <- append(vec, c(current_row_name , q))
}
#both same result
"a_sum = aa + (Aa / 2)
sum_all = aa + Aa + AA
q = a_sum / sum_all"
}
View(qcalculation)
View(qcalculation)
View(qcalculation)
View(qcalculation)
View(qcalculation)
row_Name <- rownames(SNPdata)
#using of current row problem with the type 1L = 1 they are the sane thing but the in row_Name does not work
current_row = 0
for(row in 1:nrow(SNPdata)) {
AA <- 0
Aa <- 0
aa <- 0
current_row = current_row + 1
print(row)
for(col in 1:ncol(SNPdata)) {
i <- SNPdata[row,col]
if(i == 0){AA = AA + 1}
if(i == 1){Aa = Aa + 1}
if(i == 2){aa = aa + 1}
}
a_sum <- aa * 2 + Aa
sum_all <- (aa + Aa + AA) * 2
q <- a_sum / sum_all
current_row_name <- row_Name[current_row]
# !!! don't know if it is ok just append in sequential order the char and the value associated
vec <- append(vec, c(current_row_name , q))
}
# !!! don't know if it is ok just append in sequential order the char and the value associated
vec <- append(vec, c(current_row_name , q))
?pchisq()
## ---------------------------------------------------------------------------------------------------------------------
## Test of the functions
setwd("C:\Users\Piermarco\Documents\GitHub\BigDataBuona\Projects-of-Computational-Genomics\Project1")
## ---------------------------------------------------------------------------------------------------------------------
## Test of the functions
setwd("C:/Users/Piermarco/Documents/GitHub/BigDataBuona/Projects-of-Computational-Genomics/Project1")
SNPdata <- read.table("SNPdata.txt",header = TRUE, sep = "")
qcalculation <- function(SNPdata) {
# num of chromo
N = dim(SNPdata)[2]
# initialization of output vector
q_vec = c(1:nrow(SNPdata))*0
# labeling of the vector
names(q_vec)<-row.names(SNPdata)
for (row in 1:nrow(SNPdata)) {
AA <- 0
Aa <- 0
aa <- 0
for (col in 1:ncol(SNPdata)) {
cell <- SNPdata[row,col]
if(cell == 0){AA = AA + 1}
if(cell == 1){Aa = Aa + 1}
if(cell == 2){aa = aa + 1}
}
q_est = (aa*2+Aa)/(2*N)
q_vec[row] = q_est
}
return(q_vec)
}
View(qcalculation)
# num of chromo
N = dim(SNPdata)[2]
# initialization of output vector
q_vec = c(1:nrow(SNPdata))*0
# labeling of the vector
names(q_vec)<-row.names(SNPdata)
for (row in 1:nrow(SNPdata)) {
AA <- 0
Aa <- 0
aa <- 0
for (col in 1:ncol(SNPdata)) {
cell <- SNPdata[row,col]
if(cell == 0){AA = AA + 1}
if(cell == 1){Aa = Aa + 1}
if(cell == 2){aa = aa + 1}
}
q_est = (aa*2+Aa)/(2*N)
q_vec[row] = q_est
}
return(q_vec)
# read data from file path
SNPdata <- read.table(filepath, header = TRUE, sep = "")
# Selection of control group
SNPdata_ctrl = SNPdata[ , indCTRL]
# Check HWE assumption of th control group
HWE_pvalue_ctrl <- HWEtest(SNPdata_ctrl)
# Filter data with  HWE > HWEalpha
SNPdata_filt = SNPdata[HWE_pvalue_ctrl > HWEalpha, ]
N = dim(SNPdata)[2]
# initialization of output vector
HWE_pvalue_vec = c(1:nrow(SNPdata))*0
# labeling of the vector
names(HWE_pvalue_vec)<-row.names(SNPdata)
for (row in 1:nrow(SNPdata)) {
AA <- 0
Aa <- 0
aa <- 0
for (col in 1:ncol(SNPdata)) {
cell <- SNPdata[row,col]
if(cell == 0){AA = AA + 1}
if(cell == 1){Aa = Aa + 1}
if(cell == 2){aa = aa + 1}
}
q_est = (aa*2+Aa)/(2*N)
p_est = 1 - q_est
Chi_est = ((AA-N*p_est^2)^2 )/(N*p_est^2) + ((Aa-2*N*p_est*q_est)^2 )/(2*N*p_est*q_est) + ((aa-N*q_est^2)^2 )/(N*q_est^2)
pvalue_est <- pchisq(Chi_est, 1, ncp = 0, lower.tail = FALSE, log.p = FALSE)
HWE_pvalue_vec[row] = pvalue_est
}
return(HWE_pvalue_vec)
# read data from file path
SNPdata <- read.table(filepath, header = TRUE, sep = "")
## ---------------------------------------------------------------------------------------------------------------------
## Test of the functions
path<-setwd("C:/Users/Piermarco/Documents/GitHub/BigDataBuona/Projects-of-Computational-Genomics/Project1")
VARIANTanalysis(path, 1201)
VARIANTanalysis <- function(filepath, indCTRL, MAFth = 0.01, HWEalpha = 0.01){
# read data from file path
SNPdata <- read.table(filepath, header = TRUE, sep = "")
## FILTERING OF THE RAW DATA
# Selection of control group
SNPdata_ctrl = SNPdata[ , indCTRL]
# Check HWE assumption of th control group
HWE_pvalue_ctrl <- HWEtest(SNPdata_ctrl)
# Filter data with  HWE > HWEalpha
SNPdata_filt = SNPdata[HWE_pvalue_ctrl > HWEalpha, ]
# Chech MAF assumption
q_vec <- qcalculation(SNPdata_filt)
# Filter data  with MAF > MAFth
SNPdata_filt = SNPdata_filt[q_vec > MAFth, ]
# calculation of the Chi_2 of the association test from the data
N = dim(SNPdata)[2]
# initialization of output vector
HWE_pvalue_vec = c(1:nrow(SNPdata_filt))*0
# labeling of the vector
names(HWE_pvalue_vec)<-row.names(SNPdata_filt)
for (row in 1:nrow(SNPdata_filt)) {
AA <- 0
Aa <- 0
aa <- 0
for (col in 1:ncol(SNPdata_filt)) {
cell <- SNPdata_filt[row,col]
if(cell == 0){AA = AA + 1}
if(cell == 1){Aa = Aa + 1}
if(cell == 2){aa = aa + 1}
}
q_est = (aa*2+Aa)/(2*N)
p_est = 1 - q_est
Chi_est = ((AA-N*p_est^2)^2 )/(N*p_est^2) + ((Aa-2*N*p_est*q_est)^2 )/(2*N*p_est*q_est) + ((aa-N*q_est^2)^2 )/(N*q_est^2)
# calutation of the p_value
P_value_filt <- pchisq(Chi_est, 1, lower.tail = FALSE)
}
}
VARIANTanalysis(path, 1201)
# read data from file path
SNPdata <- read.table(filepath, header = TRUE, sep = "")
VARIANTanalysis(path, 1201)
path + "SNPdata.txt"
## ---------------------------------------------------------------------------------------------------------------------
## Test of the functions
path<-setwd("C:/Users/Piermarco/Documents/GitHub/BigDataBuona/Projects-of-Computational-Genomics/Project1/SNPdata.txt")
path <- "C:/Users/Piermarco/Documents/GitHub/BigDataBuona/Projects-of-Computational-Genomics/Project1/SNPdata.txt"
VARIANTanalysis(path, 1201)
HWEtest <- function(SNPdata){
N = dim(SNPdata)[2]
# initialization of output vector
HWE_pvalue_vec = c(1:nrow(SNPdata))*0
# labeling of the vector
names(HWE_pvalue_vec)<-row.names(SNPdata)
for (row in 1:nrow(SNPdata)) {
AA <- 0
Aa <- 0
aa <- 0
for (col in 1:ncol(SNPdata)) {
cell <- SNPdata[row,col]
if(cell == 0){AA = AA + 1}
if(cell == 1){Aa = Aa + 1}
if(cell == 2){aa = aa + 1}
}
q_est = (aa*2+Aa)/(2*N)
p_est = 1 - q_est
Chi_est = ((AA-N*p_est^2)^2 )/(N*p_est^2) + ((Aa-2*N*p_est*q_est)^2 )/(2*N*p_est*q_est) + ((aa-N*q_est^2)^2 )/(N*q_est^2)
pvalue_est <- pchisq(Chi_est, 1, ncp = 0, lower.tail = FALSE, log.p = FALSE)
HWE_pvalue_vec[row] = pvalue_est
}
return(HWE_pvalue_vec)
}
VARIANTanalysis <- function(filepath, indCTRL, MAFth = 0.01, HWEalpha = 0.01){
# read data from file path
SNPdata <- read.table(filepath, header = TRUE, sep = "")
## FILTERING OF THE RAW DATA
# Selection of control group
SNPdata_ctrl = SNPdata[ , indCTRL]
# Check HWE assumption of th control group
HWE_pvalue_ctrl <- HWEtest(SNPdata_ctrl)
# Filter data with  HWE > HWEalpha
SNPdata_filt = SNPdata[HWE_pvalue_ctrl > HWEalpha, ]
# Chech MAF assumption
q_vec <- qcalculation(SNPdata_filt)
# Filter data  with MAF > MAFth
SNPdata_filt = SNPdata_filt[q_vec > MAFth, ]
# calculation of the Chi_2 of the association test from the data
N = dim(SNPdata)[2]
# initialization of output vector
HWE_pvalue_vec = c(1:nrow(SNPdata_filt))*0
# labeling of the vector
names(HWE_pvalue_vec)<-row.names(SNPdata_filt)
for (row in 1:nrow(SNPdata_filt)) {
AA <- 0
Aa <- 0
aa <- 0
for (col in 1:ncol(SNPdata_filt)) {
cell <- SNPdata_filt[row,col]
if(cell == 0){AA = AA + 1}
if(cell == 1){Aa = Aa + 1}
if(cell == 2){aa = aa + 1}
}
q_est = (aa*2+Aa)/(2*N)
p_est = 1 - q_est
Chi_est = ((AA-N*p_est^2)^2 )/(N*p_est^2) + ((Aa-2*N*p_est*q_est)^2 )/(2*N*p_est*q_est) + ((aa-N*q_est^2)^2 )/(N*q_est^2)
# calutation of the p_value
P_value_filt <- pchisq(Chi_est, 1, lower.tail = FALSE)
}
}
View(qcalculation)
View(VARIANTanalysis)
# read data from file path
SNPdata <- read.table(filepath, header = TRUE, sep = "")
VARIANTanalysis(path, 1201)
VARIANTanalysis(path, 1201)
qcalculation <- function(SNPdata) {
# num of chromo
N = dim(SNPdata)[2]
# initialization of output vector
q_vec = c(1:nrow(SNPdata))*0
# labeling of the vector
names(q_vec)<-row.names(SNPdata)
for (row in 1:nrow(SNPdata)) {
AA <- 0
Aa <- 0
aa <- 0
for (col in 1:ncol(SNPdata)) {
cell <- SNPdata[row,col]
if(cell == 0){AA = AA + 1}
if(cell == 1){Aa = Aa + 1}
if(cell == 2){aa = aa + 1}
}
q_est = (aa*2+Aa)/(2*N)
q_vec[row] = q_est
}
return(q_vec)
}
HWEtest <- function(SNPdata){
N = dim(SNPdata)[2]
# initialization of output vector
HWE_pvalue_vec = c(1:nrow(SNPdata))*0
# labeling of the vector
names(HWE_pvalue_vec)<-row.names(SNPdata)
for (row in 1:nrow(SNPdata)) {
AA <- 0
Aa <- 0
aa <- 0
for (col in 1:ncol(SNPdata)) {
cell <- SNPdata[row,col]
if(cell == 0){AA = AA + 1}
if(cell == 1){Aa = Aa + 1}
if(cell == 2){aa = aa + 1}
}
q_est = (aa*2+Aa)/(2*N)
p_est = 1 - q_est
Chi_est = ((AA-N*p_est^2)^2 )/(N*p_est^2) + ((Aa-2*N*p_est*q_est)^2 )/(2*N*p_est*q_est) + ((aa-N*q_est^2)^2 )/(N*q_est^2)
pvalue_est <- pchisq(Chi_est, 1, ncp = 0, lower.tail = FALSE, log.p = FALSE)
HWE_pvalue_vec[row] = pvalue_est
}
return(HWE_pvalue_vec)
}
# vector containing the height of 4 person
v <- c(150,160,170,180)
v
# name of the person
names(v) <- c("John","Sara","Paul","Carl")
qcalculation <- function(SNPdata) {
# num of chromo
N = dim(SNPdata)[2]
# initialization of output vector
q_vec = c(1:nrow(SNPdata))*0
# labeling of the vector
names(q_vec)<-row.names(SNPdata)
for (row in 1:nrow(SNPdata)) {
AA <- 0
Aa <- 0
aa <- 0
for (col in 1:ncol(SNPdata)) {
cell <- SNPdata[row,col]
if(cell == 0){AA = AA + 1}
if(cell == 1){Aa = Aa + 1}
if(cell == 2){aa = aa + 1}
}
q_est = (aa*2+Aa)/(2*N)
q_vec[row] = q_est
}
return(q_vec)
}
HWEtest <- function(SNPdata){
N = dim(SNPdata)[2]
# initialization of output vector
HWE_pvalue_vec = c(1:nrow(SNPdata))*0
# labeling of the vector
names(HWE_pvalue_vec)<-row.names(SNPdata)
for (row in 1:nrow(SNPdata)) {
AA <- 0
Aa <- 0
aa <- 0
for (col in 1:ncol(SNPdata)) {
cell <- SNPdata[row,col]
if(cell == 0){AA = AA + 1}
if(cell == 1){Aa = Aa + 1}
if(cell == 2){aa = aa + 1}
}
q_est = (aa*2+Aa)/(2*N)
p_est = 1 - q_est
Chi_est = ((AA-N*p_est^2)^2 )/(N*p_est^2) + ((Aa-2*N*p_est*q_est)^2 )/(2*N*p_est*q_est) + ((aa-N*q_est^2)^2 )/(N*q_est^2)
pvalue_est <- pchisq(Chi_est, 1, ncp = 0, lower.tail = FALSE, log.p = FALSE)
HWE_pvalue_vec[row] = pvalue_est
}
return(HWE_pvalue_vec)
}
VARIANTanalysis <- function(filepath, indCTRL, MAFth = 0.01, HWEalpha = 0.01){
# read data from file path
SNPdata <- read.table(filepath, header = TRUE, sep = "")
## FILTERING OF THE RAW DATA
# Selection of control group
SNPdata_ctrl = SNPdata[ , indCTRL]
# Check HWE assumption of th control group
HWE_pvalue_ctrl <- HWEtest(SNPdata_ctrl)
# Filter data with  HWE > HWEalpha
SNPdata_filt = SNPdata[HWE_pvalue_ctrl > HWEalpha, ]
# Chech MAF assumption
q_vec <- qcalculation(SNPdata_filt)
# Filter data  with MAF > MAFth
SNPdata_filt = SNPdata_filt[q_vec > MAFth, ]
# calculation of the Chi_2 of the association test from the data
N = dim(SNPdata_filt)[2]
# initialization of output vector
HWE_pvalue_vec = c(1:nrow(SNPdata_filt))*0
# labeling of the vector
names(HWE_pvalue_vec)<-row.names(SNPdata_filt)
for (row in 1:nrow(SNPdata_filt)) {
AA <- 0
Aa <- 0
aa <- 0
for (col in 1:ncol(SNPdata_filt)) {
cell <- SNPdata_filt[row,col]
if(cell == 0){AA = AA + 1}
if(cell == 1){Aa = Aa + 1}
if(cell == 2){aa = aa + 1}
}
q_est = (aa*2+Aa)/(2*N)
p_est = 1 - q_est
Chi_est = ((AA-N*p_est^2)^2 )/(N*p_est^2) + ((Aa-2*N*p_est*q_est)^2 )/(2*N*p_est*q_est) + ((aa-N*q_est^2)^2 )/(N*q_est^2)
# calutation of the p_value
P_value_filt <- pchisq(Chi_est, 1, lower.tail = FALSE)
}
}
## ---------------------------------------------------------------------------------------------------------------------
## Test of the functions
setwd("C:/Users/Piermarco/Documents/GitHub/BigDataBuona/Projects-of-Computational-Genomics/Project1")
#setwd("C:/Users/Alessio/OneDrive - Università degli Studi di Padova/Bio_Eng/ComputationalGenomics/LAB/Groupwork1")
SNPdata <- read.table("SNPdata.txt",header = TRUE, sep = "")
path <- "C:/Users/Piermarco/Documents/GitHub/BigDataBuona/Projects-of-Computational-Genomics/Project1/SNPdata.txt"
q_vec <- qcalculation(SNPdata)
